package CarRentalSystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Statement;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Asus
 */
public class AddRentalCar extends javax.swing.JFrame {

    Connection myConn;
    PreparedStatement ps;
    ResultSet rs;
    Statement myStat;
    private static long idCounter = 1;

    public static synchronized String createID()
    {
        return String.valueOf(idCounter++);
    }    
    /**
     * Creates new form AddRentalCar
     */
    public AddRentalCar() {
        initComponents();
        rentalID="";
    }
    private static String StudentID;
    private static String rentalID;
    private static int renthours;
    private static double price1hour;
    private static double totalcharge;
    private static int model;
    private static String carmodel;

    public static String getStudentID() {
        return StudentID;
    }
    public static String getRentalID() {
        
        return rentalID;
    }

    public static int getRenthours() {
        return renthours;
    }

    public static double getPrice1hour() {
        return price1hour;
    }

    public static double getTotalcharge() {
        return totalcharge;
    }
    public static int model(){
        return model;
    }

    public void ClearField(){
        //RentalID.setText(null);
        RentHours.setText(null);
        Price1Hour.setText(null);
        TotalPrice.setText(null);
        CarModel.setSelectedIndex(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RentHours = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CarModel = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        Price1Hour = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TotalPrice = new javax.swing.JTextField();
        Rent = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        Confirm = new javax.swing.JButton();
        IdMatrics = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Add New Rental Car");

        jLabel3.setText("Rent Hours                   :");

        RentHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RentHoursActionPerformed(evt);
            }
        });

        jLabel4.setText("Car Model Available   :");

        CarModel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Honda Civic ", "Toyota Camry   ", "Proton Saga", "Perodua Myvi", "BMW i7", "Kia Sorento", "Honda HR-V", "Toyota Yaris", "Proton Exora", "Perodua Aruz", "BMW i4", "Kia Carnival                ", "Honda City", "Toyota Fortuner", "Proton X50             ", "Perodua Axia", "BMW iX3", "Kia K5", "Honda Odyssey", "Toyota Innova" }));
        CarModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarModelActionPerformed(evt);
            }
        });

        jLabel5.setText("Price for 1 hour           :");

        Price1Hour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Price1HourActionPerformed(evt);
            }
        });

        jLabel6.setText("Total Price                    :");

        TotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalPriceActionPerformed(evt);
            }
        });

        Rent.setText("Rent");
        Rent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RentActionPerformed(evt);
            }
        });

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Confirm.setText("Confirm");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        IdMatrics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdMatricsActionPerformed(evt);
            }
        });

        jLabel7.setText("ID Matrics                     :");

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel2.setText("#Attention : 1 user can only rent 1 car !!");

        jLabel8.setText("If user want to rent more than 1 car please cancel previous rent");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Rent, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(164, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(RentHours, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(CarModel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Price1Hour, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(IdMatrics, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Confirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(143, 143, 143))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(232, 232, 232))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(161, 161, 161))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(IdMatrics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(CarModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(RentHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Price1Hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(Confirm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Reset)))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(TotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rent, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RentHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RentHoursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RentHoursActionPerformed

    private void Price1HourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Price1HourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Price1HourActionPerformed

    private void TotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalPriceActionPerformed

    private void RentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RentActionPerformed
        // TODO add your handling code here:
        PaymentGUI payment=new PaymentGUI();
        payment.setDefaultCloseOperation(payment.DISPOSE_ON_CLOSE);
        this.setVisible(false);
        payment.setVisible(true);
    }//GEN-LAST:event_RentActionPerformed

    private void CarModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CarModelActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
       ClearField();
    }//GEN-LAST:event_ResetActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
        StudentID=IdMatrics.getText();
         rentalID=createID();
        //RentalID.setText(rentalID);
        renthours=Integer. parseInt(RentHours.getText());
        model = CarModel.getSelectedIndex() + 1;
        carmodel=(String) CarModel.getSelectedItem();
        switch(model){
            case 1:
                price1hour=22.15;
                break;
            case 2:
                price1hour=25.00;
                break;
            case 3:
                price1hour=9.55;
                break;
            case 4:
                price1hour=10.60;
                break;
            case 5:
                price1hour=42.00;
                break;
            case 6:
                price1hour=9.55;
                break;
            case 7:
                price1hour=19.00;
                break;
            case 8:
                price1hour=13.70;
                break;
            case 9:
                price1hour=9.90;
                break;
            case 10:
                price1hour=14.80;
                break;
            case 11:
                price1hour=40.30;
                break;
            case 12:
                price1hour=15.00;
                break;
            case 13:
                price1hour=16.30; 
                break;
            case 14:
                price1hour=15.80;
                break;
            case 15:
                price1hour=10.00;
                break;
            case 16:
                price1hour=8.50;
                break;
            case 17:
                price1hour=38.00;
                break;
            case 18:
                price1hour=10.50;
                break;
            case 19:
                price1hour=22.20;
                break;
            case 20:
                price1hour=13.75;
                break;   
        }
        totalcharge=price1hour*(double) renthours;
        Price1Hour.setText(String.valueOf(price1hour));
        TotalPrice.setText(String.valueOf(totalcharge));
         try{ 
            //STEP 1: Establish the CONNECTION to the specific DB-will obtaining CONNECTION obj 
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrentalsystem", "root", ""); 
            myStat = myConn.createStatement(); 
            //STEP 2: Create the JDBC STATEMENT - for sending SQL STATEMENT to the DB 
          
                ps = myConn.prepareStatement("INSERT INTO rentaldetails(StudentID, rentalID, carmodel, rentalhours, price1hour, totalcharge) VALUES (?,?,?,?,?,?)"); 
                ps.setString(1, StudentID);
                ps.setString(2, rentalID);
                ps.setString(3,carmodel);
                ps.setInt(4,renthours);
                ps.setDouble(5,price1hour);
                ps.setDouble(6,totalcharge);
                ps.executeUpdate(); 
            
            
           

            }catch(Exception e){ 
            e.printStackTrace(); 
        } 
       
    }//GEN-LAST:event_ConfirmActionPerformed

    private void IdMatricsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdMatricsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdMatricsActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        MainMenuStudent mainmenustudent = new MainMenuStudent();
        mainmenustudent.setDefaultCloseOperation(mainmenustudent.EXIT_ON_CLOSE);
        this.setVisible(false);
        mainmenustudent.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRentalCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRentalCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRentalCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRentalCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRentalCar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    public javax.swing.JComboBox<String> CarModel;
    private javax.swing.JButton Confirm;
    private javax.swing.JTextField IdMatrics;
    private javax.swing.JTextField Price1Hour;
    private javax.swing.JButton Rent;
    private javax.swing.JTextField RentHours;
    private javax.swing.JButton Reset;
    private javax.swing.JTextField TotalPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
