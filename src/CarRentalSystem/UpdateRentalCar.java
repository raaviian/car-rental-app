package CarRentalSystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Asus
 */
public class UpdateRentalCar extends javax.swing.JFrame {
    Connection myConn;
    PreparedStatement ps;
    ResultSet rs;
    Statement myStat;
    /**
     * Creates new form UpdateRentalCar
     */
    public UpdateRentalCar() {
        initComponents();
    }
    private static String StudentID;
    private static String rentalID;
    private static int renthours;
    private static double price1hour;
    private static double totalcharge;
    private static int model;
    private static String carmodel;

    public static String getStudentID() {
        return StudentID;
    }

    public static String getRentalID() {
        return rentalID;
    }

    public static int getRenthours() {
        return renthours;
    }

    public static double getPrice1hour() {
        return price1hour;
    }

    public static double getTotalcharge() {
        return totalcharge;
    }

    public static int getModel() {
        return model;
    }

    public static String getCarmodel() {
        return carmodel;
    }

    
    
    public void ClearField(){
        HourRent.setText(null);
        Price1Hour.setText(null);
        TotalPrice.setText(null);
        CurrentCarModel.setText(null);
        MatricID.setText(null);
        UpdatedCarModel.setSelectedIndex(0);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MatricID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        UpdatedCarModel = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        HourRent = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Price1Hour = new javax.swing.JTextField();
        Reset = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        TotalPrice = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        Confirm = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        CurrentCarModel = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Update a Rental Car");

        jLabel2.setText("Enter your ID Matric  :");

        MatricID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MatricIDActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel3.setText("-Update Rental Details-");

        jLabel4.setText("Updated Car Model      :");

        UpdatedCarModel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Honda Civic ", "Toyota Camry   ", "Proton Saga", "Perodua Myvi", "BMW i7", "Kia Sorento", "Honda HR-V", "Toyota Yaris", "Proton Exora", "Perodua Aruz", "BMW i4", "Kia Carnival                ", "Honda City", "Toyota Fortuner", "Proton X50             ", "Perodua Axia", "BMW iX3", "Kia K5", "Honda Odyssey", "Toyota Innova" }));
        UpdatedCarModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatedCarModelActionPerformed(evt);
            }
        });

        jLabel5.setText("Rent Hours                 :");

        HourRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HourRentActionPerformed(evt);
            }
        });

        jLabel6.setText("Price for 1 hour           :");

        jLabel7.setText("Total Price                  :");

        Price1Hour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Price1HourActionPerformed(evt);
            }
        });

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        TotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalPriceActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        Confirm.setText("Calculate");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel8.setText("Current Car Model       :");

        CurrentCarModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrentCarModelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Update))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MatricID, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(search))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CurrentCarModel))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel7))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(Price1Hour)
                                                .addComponent(TotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(HourRent, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(UpdatedCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Confirm)
                                    .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(MatricID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search))
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(CurrentCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(UpdatedCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Confirm))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(HourRent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Price1Hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(TotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MatricIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MatricIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MatricIDActionPerformed

    private void UpdatedCarModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatedCarModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdatedCarModelActionPerformed

    private void HourRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HourRentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HourRentActionPerformed

    private void Price1HourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Price1HourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Price1HourActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
        ClearField();
    }//GEN-LAST:event_ResetActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        StudentID=MatricID.getText();
        try{ 
            //STEP 1: Establish the CONNECTION to the specific DB-will obtaining CONNECTION obj 
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrentalsystem", "root", ""); 
            myStat = myConn.createStatement(); 
            //STEP 2: Create the JDBC STATEMENT - for sending SQL STATEMENT to the DB 
          
              ps = myConn.prepareStatement("Select * from rentaldetails where StudentID=?"); 
              ps.setString(1,StudentID);
              rs = ps.executeQuery();
             if(rs.next()){   
             if (StudentID.equals(rs.getString("StudentID"))){
                JOptionPane.showMessageDialog(null, "Update Sucessfully");
                MainMenuStudent mainmenustudent = new MainMenuStudent();
                mainmenustudent.setDefaultCloseOperation(mainmenustudent.EXIT_ON_CLOSE);
                this.setVisible(false);
                mainmenustudent.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Update Unsucessfully");
             }     
            }}catch(Exception e){ 
            e.printStackTrace(); 
            }
    }//GEN-LAST:event_UpdateActionPerformed

    private void TotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalPriceActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        StudentID=MatricID.getText(); 
        try{ 
            //STEP 1: Establish the CONNECTION to the specific DB-will obtaining CONNECTION obj 
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrentalsystem", "root", ""); 
            myStat = myConn.createStatement(); 
            //STEP 2: Create the JDBC STATEMENT - for sending SQL STATEMENT to the DB 
          
                ps = myConn.prepareStatement("SELECT * From rentaldetails where StudentID like ?"); 
                ps.setString(1, StudentID);
                rs = ps.executeQuery();
             if(rs.next()){
             if (StudentID.equals(rs.getString("StudentID"))) {
                 ps=myConn.prepareStatement("SELECT * From rentaldetails where carmodel=?,price1hour=?,rentalhours=?,totalcharge=?");
                 ps.setString(1,carmodel);
                 ps.setDouble(2,price1hour);
                 ps.setInt(3,renthours);
                 ps.setDouble(4,totalcharge);
                JOptionPane.showMessageDialog(null, "Your Record is found");
                CurrentCarModel.setText(rs.getString("carmodel"));
                Price1Hour.setText(String.valueOf(rs.getDouble("price1hour")));
                HourRent.setText(String.valueOf(rs.getInt("rentalhours")));
                TotalPrice.setText(String.valueOf(rs.getDouble("totalcharge")));
            } else {
                JOptionPane.showMessageDialog(null, "Your Record are unable to find");
             }   
            }
            }catch(Exception e){ 
            e.printStackTrace(); 
        } 
        
    }//GEN-LAST:event_searchActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
     
        try{ 
          renthours=Integer. parseInt(HourRent.getText());
          model = UpdatedCarModel.getSelectedIndex()+1;
            switch(model){
                case 1:
                    price1hour=22.15;
                    break;
                case 2:
                    price1hour=25.00;
                    break;
                case 3:
                    price1hour=9.55;
                    break;
                case 4:
                    price1hour=10.60;
                    break;
                case 5:
                    price1hour=42.00;
                    break;
                case 6:
                    price1hour=9.55;
                    break;
                case 7:
                    price1hour=19.00;
                    break;
                case 8:
                    price1hour=13.70;
                    break;
                case 9:
                    price1hour=9.90;
                    break;
                case 10:
                    price1hour=14.80;
                    break;
                case 11:
                    price1hour=40.30;
                    break;
                case 12:
                    price1hour=15.00;
                    break;
                case 13:
                    price1hour=16.30;
                    break;
                case 14:
                    price1hour=15.80;
                    break;
                case 15:
                    price1hour=10.00;
                    break;
                case 16:
                    price1hour=8.50;
                    break;
                case 17:
                    price1hour=38.00;
                    break;
                case 18:
                    price1hour=10.50;
                    break;
                case 19:
                    price1hour=22.20;
                    break;
                case 20:
                    price1hour=13.75;
                    break;
            }
            totalcharge=price1hour*renthours;
            Price1Hour.setText(String.valueOf(price1hour));
            TotalPrice.setText(String.valueOf(totalcharge));
            carmodel=(String) UpdatedCarModel.getSelectedItem();
            //STEP 1: Establish the CONNECTION to the specific DB-will obtaining CONNECTION obj 
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/carrentalsystem", "root", ""); 
            myStat = myConn.createStatement(); 
            //STEP 2: Create the JDBC STATEMENT - for sending SQL STATEMENT to the DB 
          
                ps = myConn.prepareStatement("UPDATE rentaldetails SET carmodel=?,rentalhours=?,price1hour=?,totalcharge=? WHERE 4"); 
                ps.setString(1,carmodel);
                ps.setInt(2,renthours);
                ps.setDouble(3,price1hour);
                ps.setDouble(4,totalcharge);
                ps.executeUpdate();
             
                
                Price1Hour.setText(String.valueOf(price1hour));
                HourRent.setText(String.valueOf(renthours));
                TotalPrice.setText(String.valueOf(totalcharge));
                
            }catch(Exception e){ 
            e.printStackTrace(); 
        } 
      
        
    }//GEN-LAST:event_ConfirmActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        MainMenuStudent mainmenustudent = new MainMenuStudent();
        mainmenustudent.setDefaultCloseOperation(mainmenustudent.EXIT_ON_CLOSE);
        this.setVisible(false);
        mainmenustudent.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void CurrentCarModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrentCarModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CurrentCarModelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateRentalCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateRentalCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateRentalCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateRentalCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateRentalCar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Confirm;
    private javax.swing.JTextField CurrentCarModel;
    private javax.swing.JTextField HourRent;
    private javax.swing.JTextField MatricID;
    private javax.swing.JTextField Price1Hour;
    private javax.swing.JButton Reset;
    private javax.swing.JTextField TotalPrice;
    private javax.swing.JButton Update;
    private javax.swing.JComboBox<String> UpdatedCarModel;
    private javax.swing.JButton back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
}
